<?xml version="1.0" encoding="ASCII"?>

<!-- oks-schema version 2.2 -->


<!DOCTYPE oks-schema [
  <!ELEMENT oks-schema (info, (include)?, (comments)?, (class)+)>
  <!ELEMENT info EMPTY>
  <!ATTLIST info
      name CDATA #IMPLIED
      type CDATA #IMPLIED
      num-of-items CDATA #REQUIRED
      oks-format CDATA #FIXED "schema"
      oks-version CDATA #REQUIRED
      created-by CDATA #IMPLIED
      created-on CDATA #IMPLIED
      creation-time CDATA #IMPLIED
      last-modified-by CDATA #IMPLIED
      last-modified-on CDATA #IMPLIED
      last-modification-time CDATA #IMPLIED
  >
  <!ELEMENT include (file)+>
  <!ELEMENT file EMPTY>
  <!ATTLIST file
      path CDATA #REQUIRED
  >
  <!ELEMENT comments (comment)+>
  <!ELEMENT comment EMPTY>
  <!ATTLIST comment
      creation-time CDATA #REQUIRED
      created-by CDATA #REQUIRED
      created-on CDATA #REQUIRED
      author CDATA #REQUIRED
      text CDATA #REQUIRED
  >
  <!ELEMENT class (superclass | attribute | relationship | method)*>
  <!ATTLIST class
      name CDATA #REQUIRED
      description CDATA ""
      is-abstract (yes|no) "no"
  >
  <!ELEMENT superclass EMPTY>
  <!ATTLIST superclass name CDATA #REQUIRED>
  <!ELEMENT attribute EMPTY>
  <!ATTLIST attribute
      name CDATA #REQUIRED
      description CDATA ""
      type (bool|s8|u8|s16|u16|s32|u32|s64|u64|float|double|date|time|string|uid|enum|class) #REQUIRED
      range CDATA ""
      format (dec|hex|oct) "dec"
      is-multi-value (yes|no) "no"
      init-value CDATA ""
      is-not-null (yes|no) "no"
      ordered (yes|no) "no"
  >
  <!ELEMENT relationship EMPTY>
  <!ATTLIST relationship
      name CDATA #REQUIRED
      description CDATA ""
      class-type CDATA #REQUIRED
      low-cc (zero|one) #REQUIRED
      high-cc (one|many) #REQUIRED
      is-composite (yes|no) #REQUIRED
      is-exclusive (yes|no) #REQUIRED
      is-dependent (yes|no) #REQUIRED
      ordered (yes|no) "no"
  >
  <!ELEMENT method (method-implementation*)>
  <!ATTLIST method
      name CDATA #REQUIRED
      description CDATA ""
  >
  <!ELEMENT method-implementation EMPTY>
  <!ATTLIST method-implementation
      language CDATA #REQUIRED
      prototype CDATA #REQUIRED
      body CDATA ""
  >
]>

<oks-schema>

<info name="" type="" num-of-items="23" oks-format="schema" oks-version="oks-08-03-02-13-gebf8a70 built &quot;Mar 10 2021&quot;" created-by="" created-on="" creation-time="20030429T123339" last-modified-by="isolov" last-modified-on="pcatd79.cern.ch" last-modification-time="20210311T185140"/>

 <class name="Application" description="This class is used to describe DAQ software component from &apos;setup/shutdown&apos; database. If we need to start a new DAQ software component, we have to create an instance of this class and put references to software object (SW_Object class) which we need to start and CPU where we want to start it. The &apos;Initialization&apos; and &apos;Shutdown&apos; dependencies are used in case if we want to start a component synshronosly and we know whict components we must start before.">
  <attribute name="Name" type="string" init-value="Unknown Application"/>
  <attribute name="Parameters" type="string"/>
  <attribute name="Priority" type="s32"/>
  <attribute name="Privileges" type="string"/>
  <attribute name="InitTimeout" type="u32" init-value="60"/>
  <attribute name="CreationType" description="Creation Type attribute enumeration has the following valid tokens:&#xA;1. Default&#x9;- all applications&#xA;2. DAQ_Setup&#x9;- started by Supervisor at setup&#xA;3. DAQ_Shutdown&#x9;- started by Supervisor at shutdown&#xA;4. SOR&#x9;&#x9;- started by ??? at Start Of Run&#xA;5. EOR&#x9;&#x9;- started by ??? at End Of Run&#xA;6. Supervised&#x9;- must be monitored by DAQ supervisor and at least 2-5 must be set" type="enum" range="Default,DAQ_Setup,DAQ_Shutdown,SOR,EOR,Supervised" is-multi-value="yes" init-value="Default"/>
  <attribute name="InputDevice" type="string"/>
  <attribute name="OutputDevice" type="string"/>
  <attribute name="ErrorDevice" type="string"/>
  <attribute name="UseAllParameters" type="bool" init-value="true"/>
  <attribute name="UseAllEnvironment" type="bool" init-value="true"/>
  <relationship name="SWObject" class-type="SW_Object" low-cc="one" high-cc="one" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="RunsOn" class-type="Computer" low-cc="zero" high-cc="one" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="NeedsEnvironment" class-type="Environment" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="InitializationDependsFrom" class-type="Application" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="ShutdownDependsFrom" class-type="Application" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="HasParameters" class-type="Parameter" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="CPU_Board">
  <superclass name="Computer"/>
  <relationship name="IsPartOf" class-type="Module" low-cc="one" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Computer" description="Describes an abstract computer.&#xA;Has subclasses to describe workstation&#xA;and build-in CPU." is-abstract="yes">
  <attribute name="OsType" type="enum" range="lynx,wnt,solaris,hpux,linux" init-value="lynx"/>
  <attribute name="Name" type="string"/>
 </class>

 <class name="Configuration">
  <attribute name="Name" type="string" init-value="Unknown"/>
  <relationship name="Schemes" class-type="SchemaFile" low-cc="one" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="Data" class-type="DataFile" low-cc="one" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Crate">
  <attribute name="Name" type="string" init-value="Unknown Crate"/>
  <attribute name="NumberOfSlots" type="u16"/>
  <attribute name="LogicalId" type="u32" init-value="0"/>
  <relationship name="BelongsTo" class-type="Detector" low-cc="zero" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="Contains" class-type="Module" low-cc="one" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="DataFile">
  <attribute name="FileName" type="string" init-value="noname.data.xml"/>
  <relationship name="Needs" class-type="SchemaFile" low-cc="one" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Detector">
  <attribute name="Name" type="string"/>
  <attribute name="LogicalId" type="u32" init-value="0"/>
  <relationship name="HasParameters" class-type="Parameter" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="Contains" class-type="Crate" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="IsPartOf" class-type="Detector" low-cc="zero" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="ConsistsOf" class-type="Detector" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Environment" description="The Environment class is used to describe environment variables and their values. These variables are defined and values are assigned before starting the corresponding process. The SW_Object defines general environment variables (for example, they can describe the name of some configuration database, the name of workstation, where some server is running and so on). The Program defines platform specific environment variables or redefines general environment variables for the actual program. The SW_Configuration defines configuration specific environment (for example the name of the configuartion). The SW_Module defines the environment which is specific for concrete started program.">
  <attribute name="Variable" type="string"/>
  <attribute name="Value" type="string"/>
 </class>

 <class name="EventSamplingCriteria">
  <attribute name="Level1Type" type="u32" init-value="0"/>
  <attribute name="SubdetectorType" type="u32" init-value="0"/>
  <attribute name="Level2Decision" type="u32" init-value="0"/>
  <attribute name="StatusWord" type="u32" init-value="0"/>
 </class>

 <class name="IOM" description="Input/Output Module is used to describe&#xA;abstract module that has additional&#xA;IO devices. " is-abstract="yes">
  <superclass name="Module"/>
  <relationship name="HasIO_Devices" class-type="IO_Device" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="IO_CPU">
  <superclass name="Computer"/>
  <relationship name="IsPartOf" class-type="IO_Device" low-cc="one" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="IO_Device">
  <attribute name="Name" type="string"/>
  <attribute name="Type" type="string"/>
  <relationship name="IsPartOf" class-type="IOM" low-cc="one" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="HasCPU" class-type="IO_CPU" low-cc="zero" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Module" description="Class Module describes an abstarct module.&#xA;It has a lot of subclasses.">
  <attribute name="Name" type="string" init-value="Unknown Module"/>
  <attribute name="PhysAddress" type="u32" init-value="0"/>
  <attribute name="CommAddress" type="u32"/>
  <attribute name="State" type="enum" range="enabled,disabled" init-value="enabled"/>
  <attribute name="Position" type="u16" init-value="0"/>
  <attribute name="Width" type="u16" init-value="1"/>
  <attribute name="LogicalId" type="u32" init-value="0"/>
  <relationship name="HasParameters" class-type="Parameter" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="HasCPU" class-type="CPU_Board" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
  <relationship name="IsPartOf" class-type="Crate" low-cc="one" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="NetworkConfiguration" description="This abstract class is used to set link between partition object and description of switching network configuration. The actual type of the configuration (e.g. ConnectionTable) is not provided by online schema." is-abstract="yes">
  <attribute name="Name" type="string" init-value="Noname"/>
 </class>

 <class name="Parameter">
  <attribute name="Name" type="string"/>
  <attribute name="Value" type="string"/>
 </class>

 <class name="Partition">
  <superclass name="Configuration"/>
  <attribute name="RepositoryRoot" type="string" init-value="${SRT_INST}"/>
  <attribute name="DefaultParameters" type="string"/>
  <attribute name="RunTypes" type="string" is-multi-value="yes"/>
  <relationship name="NeedsEnvironment" class-type="Environment" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="Contains" class-type="Application" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="UsesCrates" class-type="Crate" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="UsesDetectors" class-type="Detector" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="defaultHost" class-type="Computer" low-cc="zero" high-cc="one" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="HasNetworkConfiguration" class-type="NetworkConfiguration" low-cc="zero" high-cc="one" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="NestedPartitions" class-type="Partition" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Program" description="This class is used to describe platform dependent part of DAQ software component. An instance of this class describes a release of package (a program more exactly). It defines default parameters to start a program (command line, environment, priority, etc.) as well.">
  <attribute name="OsType" type="enum" range="lynx,wnt,solaris,hpux,linux" init-value="lynx"/>
  <attribute name="ExecutableFile" type="string"/>
  <attribute name="DefaultParameters" type="string"/>
  <attribute name="DefaultPriority" type="s32"/>
  <attribute name="DefaultPrivileges" type="string"/>
  <relationship name="NeedsEnvironment" class-type="Environment" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="DescribedBy" class-type="SW_Object" low-cc="one" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="RunControlApplication">
  <superclass name="Application"/>
  <attribute name="CommTimeout" type="s32" init-value="30"/>
  <attribute name="CreationType" type="enum" range="Default,DAQ_Setup,DAQ_Shutdown,SOR,EOR,Supervised" is-multi-value="yes" init-value="Supervised"/>
  <relationship name="children" class-type="RunControlApplication" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="SW_Object" description="This class is used to desribe platform independent part of DAQ software component from logical point of view.&#xA;The platform dependent part is described by &apos;Program&apos; class.&#xA;To start DAQ software component it is necessary to create an instance of &apos;SW_Module&apos; class.">
  <attribute name="Name" description="A string is used to desribe unique name of the software object." type="string" init-value="Unknown"/>
  <attribute name="Description" type="string"/>
  <attribute name="Authors" type="string" is-multi-value="yes"/>
  <attribute name="HelpLink" type="string" init-value="http://"/>
  <attribute name="DefaultParameters" type="string"/>
  <attribute name="DefaultPriority" type="s32"/>
  <attribute name="DefaultPrivileges" type="string"/>
  <relationship name="NeedsResources" class-type="SW_Resource" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="NeedsEnvironment" class-type="Environment" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="ImplementedBy" description="The software object is implemented by one or more programs." class-type="Program" low-cc="one" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="SW_Resource" description="The Resource class is used to describe shared and exclusive resources used by the processes: the name of the resource, the maximum numbers of copies per partition and per system (i.e. total), and documentation (help URL and comments). The dynamic part of a resource includes the list of processes that allocated this resource.&#xA;An example of a resource could be a run-time license (for example we can start limited number of processes with GUI that use some commercial widget). A resource can describe some hardware resources (for example we can not have two concurrent processes that write on the same type recorder device). The use of resources can be connected with the architecture of the process (for example, we do not want to allow start simultaneously several GUI editors for the same data, if there is no concurrent update of graphical view or the creator of software objects knows that it must be started only once per system or per partition, etc.).">
  <attribute name="Name" type="string" init-value="Unknown"/>
  <attribute name="MaxCopyPerPartition" type="s32" init-value="1"/>
  <attribute name="MaxCopyTotal" type="s32" init-value="1"/>
  <attribute name="HelpLink" type="string" init-value="http://"/>
  <attribute name="Description" type="string"/>
 </class>

 <class name="SamplingApplication">
  <superclass name="Application"/>
  <attribute name="EventTransferType" type="enum" range="IOMLDAQ_MP,IOM_BMA,LDAQ_MEMCPY,LDAQ_BMA" init-value="IOMLDAQ_MP"/>
  <relationship name="Criteria" class-type="EventSamplingCriteria" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="SchemaFile">
  <attribute name="FileName" type="string" init-value="noname.schema.xml"/>
 </class>

 <class name="Workstation">
  <superclass name="Computer"/>
 </class>

</oks-schema>
